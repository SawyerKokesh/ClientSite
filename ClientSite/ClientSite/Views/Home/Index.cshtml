@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewData["Title"]</h2>
<hr />
<div>
    <h3>What:</h3>

    <p class="homePagePara">
        The base of this project is a ASP.NET Core Web MVC Application created on Visual Studio 2017. 
        Created to provide a code example of my .Net Ability. 
        The purpose of this site is to display clients, by name and category. 
        It also allows for adding new clients, as well as edit, delete, and view. 
        The data is stored in MS SQL Local DB that is created on the build of the project, which also seeds data to the table. 
        The database holds ID, Title, Category, Website, and Image. 
        Title and Category are viewable in the client table, the rest is viewable in the detail page. 
        There are both an about page and contact page on the top nav bar to be filled in at a later date.
    </p>
</div>
<hr />
<div>
    <h3>Why:</h3>

    <p class="homePagePara">
        The reason I used the Visual Studio ASP.NET MVC was to create a quick base that I am comfortable with to start this project. 
        This project was created yesterday 3/31/2019 to give a code example. 
        I came up with this idea because it is similar to the work I did as CASS, as well as a way to look more into the grey ghost clients. 
        I decided to make a site that used a database and multiple pages, instead of a single static website (such as my personal website https://sawyerkokesh.github.io/) because it would not show off what I am capable of. 
        Once I knew I was going to use a database, I choose to use MVC because it is a good way for the separation between the data in the models and the interface in the views. 
        Furthermore developing in visual studio lets this happen quickly, by being able to create scaffolding off of a model which allows for a very quick implementation of the CRUD methods and the database. 
        In the database everything is stored as strings, where the website and image are both urls. 
        validation is done within the client as regular expressions. 
        The purpose of the Images being stored as a url was because of time.
    </p>
</div>